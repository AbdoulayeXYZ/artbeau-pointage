version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: artbeau_backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=1000
    volumes:
      - ./backend/data:/app/data
      - ./backend/logs:/app/logs
    networks:
      - artbeau_network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: artbeau_frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-ssl.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl/certs:/etc/letsencrypt
      - ./ssl/www:/var/www/certbot
    depends_on:
      - backend
    networks:
      - artbeau_network

  # Optional: Base de donn√©es PostgreSQL si vous voulez migrer de SQLite
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: artbeau_postgres
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: artbeau_pointage
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - artbeau_network

networks:
  artbeau_network:
    driver: bridge

volumes:
  postgres_data:
  ssl_certs:
  ssl_www:
